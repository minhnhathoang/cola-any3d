version: '3.7'

x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2024-03-15T01-07-19Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
    MINIO_NOTIFY_KAFKA_ENABLE: on
    MINIO_NOTIFY_KAFKA_BROKERS: kafka:9092
    MINIO_NOTIFY_KAFKA_TOPIC: minio-events

  healthcheck:
    test: [ "CMD", "mc", "ready", "local" ]
    interval: 5s
    timeout: 5s
    retries: 5

services:
#  springboot:
#    platform: linux/x86_64
#    image: any3d
#    build:
#      context: .
#      dockerfile: Dockerfile
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/any3d
#      SPRING_DATASOURCE_USERNAME: admin
#      SPRING_DATASOURCE_PASSWORD: password
#      SPRING_KAFKA_BOOTSTRAP-SERVERS: kafka:9092
#      MINIO_URL: http://minio1:9000
#      MINIO_USERNAME: minioadmin
#      MINIO_PASSWORD: minioadmin
#    ports:
#      - "8080:8080"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
##      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.2.4:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.20.16.1:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: any3d
      MYSQL_USER: admin
      MYSQL_PASSWORD: password
    volumes:
      - ./data/db:/var/lib/mysql
    ports:
      - "3306:3306"

  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4

volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2: